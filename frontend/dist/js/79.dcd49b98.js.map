{"version":3,"file":"js/79.dcd49b98.js","mappings":"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","sources":["webpack://flover_market/./src/components/Header2.vue","webpack://flover_market/./src/components/Header2.vue?7b21","webpack://flover_market/../../../src/components/VSelectionControlGroup/VSelectionControlGroup.tsx","webpack://flover_market/../../../src/components/VSelectionControl/VSelectionControl.tsx","webpack://flover_market/../../../src/components/VSwitch/VSwitch.tsx","webpack://flover_market/./src/views/NotificationsPage.vue","webpack://flover_market/./src/views/NotificationsPage.vue?61d4","webpack://flover_market/../../../src/components/VGrid/VSpacer.ts"],"sourcesContent":["<script>\r\nexport default {\r\n  name: \"Header2\"\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"new_header\">\r\n    <img class=\"arrow\" :src=\"require('@/assets/arrow_white.png')\" alt=\"Назад\" @click=\"$router.go(-1)\" />\r\n    <h1>{{ $route.name}}</h1>\r\n    <div style=\"justify-self: end;    margin-top: -15px;\">\r\n      <slot></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.new_header{\r\n  width: 100%;\r\n  height: 187px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  align-items: center;\r\n  background-color: #AF9595;\r\n  justify-items: stretch\r\n}\r\n.arrow {\r\n  padding-left: 82px;\r\n  width: 130px;\r\n  cursor: pointer;\r\n  height: 75px;\r\n}\r\n.new_header h1 {\r\n  margin-top: -15px;\r\n  font-family: Playfair Display;\r\n  margin-left: -50px;\r\n  text-align: center;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  line-height: 53.32px;\r\n  color: #FFFFFF;\r\n}\r\n\r\n@media (max-width: 700px) {\r\n  .new_header h1 {\r\n    font-size: 23px;\r\n    padding-left: 10px;\r\n  }\r\n  .arrow{\r\n    padding-left: 20px;\r\n    width: 55px;\r\n    height: 50px;\r\n  }\r\n}\r\n@media (max-width: 375px) {\r\n  .new_header h1 {\r\n    font-size: 19px;\r\n    padding-left: 30px;\r\n  }\r\n  .arrow{\r\n    padding-left: 20px;\r\n    height: 35px;\r\n  }\r\n  .new_header{\r\n    height: 100px;\r\n  }\r\n}\r\n@media (max-width: 280px) {\r\n  .new_header h1 {\r\n    font-size: 18px;\r\n    padding-left: 32px;\r\n  }\r\n  .arrow{\r\n    padding-left: 20px;\r\n    height: 35px;\r\n  }\r\n}\r\n</style>","import { render } from \"./Header2.vue?vue&type=template&id=7fee9faf&scoped=true\"\nimport script from \"./Header2.vue?vue&type=script&lang=js\"\nexport * from \"./Header2.vue?vue&type=script&lang=js\"\n\nimport \"./Header2.vue?vue&type=style&index=0&id=7fee9faf&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7fee9faf\"]])\n\nexport default __exports__","// Styles\nimport './VSelectionControlGroup.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { provideDefaults } from '@/composables/defaults'\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeThemeProps } from '@/composables/theme'\n\n// Utilities\nimport { computed, onScopeDispose, provide, toRef } from 'vue'\nimport { deepEqual, genericComponent, getUid, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { RippleDirectiveBinding } from '@/directives/ripple'\nimport type { GenericProps } from '@/util'\n\nexport interface VSelectionGroupContext {\n  modelValue: Ref<any>\n  forceUpdate: () => void\n  onForceUpdate: (fn: () => void) => void\n}\n\nexport const VSelectionControlGroupSymbol: InjectionKey<VSelectionGroupContext> = Symbol.for('vuetify:selection-control-group')\n\nexport const makeSelectionControlGroupProps = propsFactory({\n  color: String,\n  disabled: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  defaultsTarget: String,\n  error: Boolean,\n  id: String,\n  inline: Boolean,\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  ripple: {\n    type: [Boolean, Object] as PropType<RippleDirectiveBinding['value']>,\n    default: true,\n  },\n  multiple: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  name: String,\n  readonly: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  modelValue: null,\n  type: String,\n  valueComparator: {\n    type: Function as PropType<typeof deepEqual>,\n    default: deepEqual,\n  },\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...makeThemeProps(),\n}, 'SelectionControlGroup')\n\nexport const makeVSelectionControlGroupProps = propsFactory({\n  ...makeSelectionControlGroupProps({\n    defaultsTarget: 'VSelectionControl',\n  }),\n}, 'VSelectionControlGroup')\n\nexport const VSelectionControlGroup = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: { default: never },\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControlGroup',\n\n  props: makeVSelectionControlGroupProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const modelValue = useProxiedModel(props, 'modelValue')\n    const uid = getUid()\n    const id = computed(() => props.id || `v-selection-control-group-${uid}`)\n    const name = computed(() => props.name || id.value)\n\n    const updateHandlers = new Set<() => void>()\n    provide(VSelectionControlGroupSymbol, {\n      modelValue,\n      forceUpdate: () => {\n        updateHandlers.forEach(fn => fn())\n      },\n      onForceUpdate: cb => {\n        updateHandlers.add(cb)\n        onScopeDispose(() => {\n          updateHandlers.delete(cb)\n        })\n      },\n    })\n\n    provideDefaults({\n      [props.defaultsTarget]: {\n        color: toRef(props, 'color'),\n        disabled: toRef(props, 'disabled'),\n        density: toRef(props, 'density'),\n        error: toRef(props, 'error'),\n        inline: toRef(props, 'inline'),\n        modelValue,\n        multiple: computed(() => !!props.multiple || (props.multiple == null && Array.isArray(modelValue.value))),\n        name,\n        falseIcon: toRef(props, 'falseIcon'),\n        trueIcon: toRef(props, 'trueIcon'),\n        readonly: toRef(props, 'readonly'),\n        ripple: toRef(props, 'ripple'),\n        type: toRef(props, 'type'),\n        valueComparator: toRef(props, 'valueComparator'),\n      },\n    })\n\n    useRender(() => (\n      <div\n        class={[\n          'v-selection-control-group',\n          { 'v-selection-control-group--inline': props.inline },\n          props.class,\n        ]}\n        style={ props.style }\n        role={ props.type === 'radio' ? 'radiogroup' : undefined }\n      >\n        { slots.default?.() }\n      </div>\n    ))\n\n    return {}\n  },\n})\n\nexport type VSelectionControlGroup = InstanceType<typeof VSelectionControlGroup>\n","// Styles\nimport './VSelectionControl.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VLabel } from '@/components/VLabel'\nimport { makeSelectionControlGroupProps, VSelectionControlGroupSymbol } from '@/components/VSelectionControlGroup/VSelectionControlGroup'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useDensity } from '@/composables/density'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, inject, nextTick, ref, shallowRef } from 'vue'\nimport {\n  filterInputAttrs,\n  genericComponent,\n  getUid,\n  matchesSelector,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { CSSProperties, ExtractPropTypes, Ref, VNode, WritableComputedRef } from 'vue'\nimport type { IconValue } from '@/composables/icons'\nimport type { EventProp, GenericProps } from '@/util'\n\nexport type SelectionControlSlot = {\n  model: WritableComputedRef<boolean>\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n  inputNode: VNode\n  icon: IconValue | undefined\n  props: {\n    onBlur: (e: Event) => void\n    onFocus: (e: FocusEvent) => void\n    id: string\n  }\n}\n\nexport type VSelectionControlSlots = {\n  default: {\n    backgroundColorClasses: Ref<string[]>\n    backgroundColorStyles: Ref<CSSProperties>\n  }\n  label: { label: string | undefined, props: Record<string, unknown> }\n  input: SelectionControlSlot\n}\n\nexport const makeVSelectionControlProps = propsFactory({\n  label: String,\n  baseColor: String,\n  trueValue: null,\n  falseValue: null,\n  value: null,\n\n  ...makeComponentProps(),\n  ...makeSelectionControlGroupProps(),\n}, 'VSelectionControl')\n\nexport function useSelectionControl (\n  props: ExtractPropTypes<ReturnType<typeof makeVSelectionControlProps>> & {\n    'onUpdate:modelValue': EventProp | undefined\n  }\n) {\n  const group = inject(VSelectionControlGroupSymbol, undefined)\n  const { densityClasses } = useDensity(props)\n  const modelValue = useProxiedModel(props, 'modelValue')\n  const trueValue = computed(() => (\n    props.trueValue !== undefined ? props.trueValue\n    : props.value !== undefined ? props.value\n    : true\n  ))\n  const falseValue = computed(() => props.falseValue !== undefined ? props.falseValue : false)\n  const isMultiple = computed(() => (\n    !!props.multiple ||\n    (props.multiple == null && Array.isArray(modelValue.value))\n  ))\n  const model = computed({\n    get () {\n      const val = group ? group.modelValue.value : modelValue.value\n\n      return isMultiple.value\n        ? wrapInArray(val).some((v: any) => props.valueComparator(v, trueValue.value))\n        : props.valueComparator(val, trueValue.value)\n    },\n    set (val: boolean) {\n      if (props.readonly) return\n\n      const currentValue = val ? trueValue.value : falseValue.value\n\n      let newVal = currentValue\n\n      if (isMultiple.value) {\n        newVal = val\n          ? [...wrapInArray(modelValue.value), currentValue]\n          : wrapInArray(modelValue.value).filter((item: any) => !props.valueComparator(item, trueValue.value))\n      }\n\n      if (group) {\n        group.modelValue.value = newVal\n      } else {\n        modelValue.value = newVal\n      }\n    },\n  })\n  const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n    if (props.error || props.disabled) return undefined\n\n    return model.value ? props.color : props.baseColor\n  }))\n  const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => {\n    return (\n      model.value &&\n      !props.error &&\n      !props.disabled\n    ) ? props.color : props.baseColor\n  }))\n  const icon = computed(() => model.value ? props.trueIcon : props.falseIcon)\n\n  return {\n    group,\n    densityClasses,\n    trueValue,\n    falseValue,\n    model,\n    textColorClasses,\n    textColorStyles,\n    backgroundColorClasses,\n    backgroundColorStyles,\n    icon,\n  }\n}\n\nexport const VSelectionControl = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VSelectionControlSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSelectionControl',\n\n  directives: { Ripple },\n\n  inheritAttrs: false,\n\n  props: makeVSelectionControlProps(),\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const {\n      group,\n      densityClasses,\n      icon,\n      model,\n      textColorClasses,\n      textColorStyles,\n      backgroundColorClasses,\n      backgroundColorStyles,\n      trueValue,\n    } = useSelectionControl(props)\n    const uid = getUid()\n    const isFocused = shallowRef(false)\n    const isFocusVisible = shallowRef(false)\n    const input = ref<HTMLInputElement>()\n    const id = computed(() => props.id || `input-${uid}`)\n    const isInteractive = computed(() => !props.disabled && !props.readonly)\n\n    group?.onForceUpdate(() => {\n      if (input.value) {\n        input.value.checked = model.value\n      }\n    })\n\n    function onFocus (e: FocusEvent) {\n      if (!isInteractive.value) return\n\n      isFocused.value = true\n      if (matchesSelector(e.target as HTMLElement, ':focus-visible') !== false) {\n        isFocusVisible.value = true\n      }\n    }\n\n    function onBlur () {\n      isFocused.value = false\n      isFocusVisible.value = false\n    }\n\n    function onClickLabel (e: Event) {\n      e.stopPropagation()\n    }\n\n    function onInput (e: Event) {\n      if (!isInteractive.value) {\n        if (input.value) {\n          // model value is not updated when input is not interactive\n          // but the internal checked state of the input is still updated,\n          // so here it's value is restored\n          input.value.checked = model.value\n        }\n\n        return\n      }\n\n      if (props.readonly && group) {\n        nextTick(() => group.forceUpdate())\n      }\n      model.value = (e.target as HTMLInputElement).checked\n    }\n\n    useRender(() => {\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n\n      const inputNode = (\n        <input\n          ref={ input }\n          checked={ model.value }\n          disabled={ !!props.disabled }\n          id={ id.value }\n          onBlur={ onBlur }\n          onFocus={ onFocus }\n          onInput={ onInput }\n          aria-disabled={ !!props.disabled }\n          aria-label={ props.label }\n          type={ props.type }\n          value={ trueValue.value }\n          name={ props.name }\n          aria-checked={ props.type === 'checkbox' ? model.value : undefined }\n          { ...inputAttrs }\n        />\n      )\n\n      return (\n        <div\n          class={[\n            'v-selection-control',\n            {\n              'v-selection-control--dirty': model.value,\n              'v-selection-control--disabled': props.disabled,\n              'v-selection-control--error': props.error,\n              'v-selection-control--focused': isFocused.value,\n              'v-selection-control--focus-visible': isFocusVisible.value,\n              'v-selection-control--inline': props.inline,\n            },\n            densityClasses.value,\n            props.class,\n          ]}\n          { ...rootAttrs }\n          style={ props.style }\n        >\n          <div\n            class={[\n              'v-selection-control__wrapper',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { slots.default?.({\n              backgroundColorClasses,\n              backgroundColorStyles,\n            })}\n\n            <div\n              class={[\n                'v-selection-control__input',\n              ]}\n              v-ripple={ props.ripple && [\n                !props.disabled && !props.readonly,\n                null,\n                ['center', 'circle'],\n              ]}\n            >\n              { slots.input?.({\n                model,\n                textColorClasses,\n                textColorStyles,\n                backgroundColorClasses,\n                backgroundColorStyles,\n                inputNode,\n                icon: icon.value,\n                props: {\n                  onFocus,\n                  onBlur,\n                  id: id.value,\n                },\n              } satisfies SelectionControlSlot) ?? (\n                <>\n                  { icon.value && <VIcon key=\"icon\" icon={ icon.value } /> }\n\n                  { inputNode }\n                </>\n              )}\n            </div>\n          </div>\n\n          { label && (\n            <VLabel for={ id.value } onClick={ onClickLabel }>\n              { label }\n            </VLabel>\n          )}\n        </div>\n      )\n    })\n\n    return {\n      isFocused,\n      input,\n    }\n  },\n})\n\nexport type VSelectionControl = InstanceType<typeof VSelectionControl>\n","// Styles\nimport './VSwitch.sass'\n\n// Components\nimport { VScaleTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VProgressCircular } from '@/components/VProgressCircular'\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\nimport { LoaderSlot, useLoader } from '@/composables/loader'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { filterInputAttrs, genericComponent, getUid, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, Ref } from 'vue'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { IconValue } from '@/composables/icons'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { GenericProps } from '@/util'\n\nexport type VSwitchSlot = {\n  model: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n}\n\nexport type VSwitchSlots =\n  & VInputSlots\n  & VSelectionControlSlots\n  & {\n    loader: LoaderSlotProps\n    thumb: { icon: IconValue | undefined } & VSwitchSlot\n    'track-false': VSwitchSlot\n    'track-true': VSwitchSlot\n  }\n\nexport const makeVSwitchProps = propsFactory({\n  indeterminate: Boolean,\n  inset: Boolean,\n  flat: Boolean,\n  loading: {\n    type: [Boolean, String],\n    default: false,\n  },\n\n  ...makeVInputProps(),\n  ...makeVSelectionControlProps(),\n}, 'VSwitch')\n\nexport const VSwitch = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VSwitchSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSwitch',\n\n  inheritAttrs: false,\n\n  props: makeVSwitchProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n    const { loaderClasses } = useLoader(props)\n    const { isFocused, focus, blur } = useFocus(props)\n    const control = ref<VSelectionControl>()\n    const isForcedColorsModeActive = IN_BROWSER && window.matchMedia('(forced-colors: active)').matches\n\n    const loaderColor = computed(() => {\n      return typeof props.loading === 'string' && props.loading !== ''\n        ? props.loading\n        : props.color\n    })\n\n    const uid = getUid()\n    const id = computed(() => props.id || `switch-${uid}`)\n\n    function onChange () {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n    function onTrackClick (e: Event) {\n      e.stopPropagation()\n      e.preventDefault()\n      control.value?.input?.click()\n    }\n\n    useRender(() => {\n      const [rootAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const inputProps = VInput.filterProps(props)\n      const controlProps = VSelectionControl.filterProps(props)\n\n      return (\n        <VInput\n          class={[\n            'v-switch',\n            { 'v-switch--flat': props.flat },\n            { 'v-switch--inset': props.inset },\n            { 'v-switch--indeterminate': indeterminate.value },\n            loaderClasses.value,\n            props.class,\n          ]}\n          { ...rootAttrs }\n          { ...inputProps }\n          v-model={ model.value }\n          id={ id.value }\n          focused={ isFocused.value }\n          style={ props.style }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n              isValid,\n            }) => {\n              const slotProps = {\n                model,\n                isValid,\n              }\n\n              return (\n                <VSelectionControl\n                  ref={ control }\n                  { ...controlProps }\n                  v-model={ model.value }\n                  id={ id.value }\n                  aria-describedby={ messagesId.value }\n                  type=\"checkbox\"\n                  onUpdate:modelValue={ onChange }\n                  aria-checked={ indeterminate.value ? 'mixed' : undefined }\n                  disabled={ isDisabled.value }\n                  readonly={ isReadonly.value }\n                  onFocus={ focus }\n                  onBlur={ blur }\n                  { ...controlAttrs }\n                >\n                  {{\n                    ...slots,\n                    default: ({ backgroundColorClasses, backgroundColorStyles }) => (\n                      <div\n                        class={[\n                          'v-switch__track',\n                          !isForcedColorsModeActive ? backgroundColorClasses.value : undefined,\n                        ]}\n                        style={ backgroundColorStyles.value }\n                        onClick={ onTrackClick }\n                      >\n                        { slots['track-true'] && (\n                          <div key=\"prepend\" class=\"v-switch__track-true\">\n                            { slots['track-true'](slotProps) }\n                          </div>\n                        )}\n\n                        { slots['track-false'] && (\n                          <div key=\"append\" class=\"v-switch__track-false\">\n                            { slots['track-false'](slotProps) }\n                          </div>\n                        )}\n                      </div>\n                    ),\n                    input: ({ inputNode, icon, backgroundColorClasses, backgroundColorStyles }) => (\n                      <>\n                        { inputNode }\n                        <div\n                          class={[\n                            'v-switch__thumb',\n                            { 'v-switch__thumb--filled': icon || props.loading },\n                            props.inset || isForcedColorsModeActive ? undefined : backgroundColorClasses.value,\n                          ]}\n                          style={ props.inset ? undefined : backgroundColorStyles.value }\n                        >\n                          { slots.thumb ? (\n                            <VDefaultsProvider\n                              defaults={{\n                                VIcon: {\n                                  icon,\n                                  size: 'x-small',\n                                },\n                              }}\n                            >\n                              { slots.thumb({ ...slotProps, icon }) }\n                            </VDefaultsProvider>\n                          ) : (\n                            <VScaleTransition>\n                              { !props.loading ? (\n                                (icon && (\n                                  <VIcon\n                                    key={ String(icon) }\n                                    icon={ icon }\n                                    size=\"x-small\"\n                                  />\n                                ))) : (\n                                <LoaderSlot\n                                  name=\"v-switch\"\n                                  active\n                                  color={ isValid.value === false ? undefined : loaderColor.value }\n                                >\n                                  { slotProps => (\n                                    slots.loader\n                                      ? slots.loader(slotProps)\n                                      : (\n                                        <VProgressCircular\n                                          active={ slotProps.isActive }\n                                          color={ slotProps.color }\n                                          indeterminate\n                                          size=\"16\"\n                                          width=\"2\"\n                                        />\n                                      )\n                                  )}\n                                </LoaderSlot>\n                              )}\n                            </VScaleTransition>\n                          )}\n                        </div>\n                      </>\n                    ),\n                  }}\n                </VSelectionControl>\n              )\n            },\n          }}\n        </VInput>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSwitch = InstanceType<typeof VSwitch>\n","<script>\r\nimport Header2 from \"@/components/Header2.vue\";\r\n\r\nexport default {\r\n  name: \"NotificationsPage\",\r\n  components: {Header2},\r\n  data() {\r\n    return {\r\n      listNotifications: [\r\n        {\r\n          id: 1,\r\n          name: \"SMS-сообщения\",\r\n          active: false,\r\n        },\r\n      ]\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <header2/>\r\n  <div class=\"container\">\r\n    <h2>SMS Рассылки</h2>\r\n    <ul>\r\n      <li v-for=\"notification in listNotifications\" :key=\"notification.id\">\r\n        <div class=\"btn-menu\">\r\n          <span style=\"padding-left: 30px\">{{ notification.name }}</span>\r\n          <v-spacer/>\r\n          <v-switch hide-details\r\n                    inset\r\n                    color=\"#81637D\"\r\n                    v-model=\"notification.active\"/>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.v-input {\r\n  padding-top: 15px;\r\n  justify-items: end;\r\n}\r\n.btn-menu >>> .v-switch--inset .v-switch__track {\r\n  height: 58px !important;\r\n  width: 105px !important;\r\n  background-color: #81637D !important;\r\n}\r\n\r\n.btn-menu >>> .v-selection-control--dirty .v-selection-control__input {\r\n  transform: translateX(40px);\r\n}\r\n\r\n.btn-menu >>> .v-switch .v-selection-control__input {\r\n  margin-left: -30px;\r\n}\r\n.btn-menu >>> .v-switch__thumb {\r\n  transform: scale(1.2) !important;\r\n  height: 40px;\r\n  width: 40px;\r\n}\r\n\r\n\r\nh2 {\r\n  font-family: Playfair Display;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  line-height: 53px;\r\n  text-align: left;\r\n  color: #6B5D76;\r\n  padding-left: 30px;\r\n  padding-bottom: 5px;\r\n}\r\n.btn-menu {\r\n  background-color: #D5CBCB;\r\n  padding: 10px 30px 20px 0;\r\n  height: 110px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n\r\nspan {\r\n  font-family: Playfair Display;\r\n  font-size: 40px;\r\n  font-weight: 700;\r\n  line-height: 53.32px;\r\n  color: #6B5D76;\r\n  text-align: left;\r\n}\r\nul {\r\n  list-style-type: none;\r\n}\r\nli {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.container {\r\n  margin-top: 100px;\r\n}\r\n\r\n@media screen and (max-width: 600px) {\r\n  span {\r\n    font-size: 30px;\r\n  }\r\n  h2 {\r\n    font-size: 30px;\r\n  }\r\n  .container {\r\n    margin-top: 50px;\r\n  }\r\n}\r\n</style>","import { render } from \"./NotificationsPage.vue?vue&type=template&id=c8a5297e&scoped=true\"\nimport script from \"./NotificationsPage.vue?vue&type=script&lang=js\"\nexport * from \"./NotificationsPage.vue?vue&type=script&lang=js\"\n\nimport \"./NotificationsPage.vue?vue&type=style&index=0&id=c8a5297e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-c8a5297e\"]])\n\nexport default __exports__","// Styles\nimport './VGrid.sass'\n\n// Utilities\nimport { createSimpleFunctional } from '@/util'\n\nexport const VSpacer = createSimpleFunctional('v-spacer', 'div', 'VSpacer')\n\nexport type VSpacer = InstanceType<typeof VSpacer>\n"],"names":["class","style","_createElementBlock","_hoisted_1","_createElementVNode","src","require","alt","onClick","_cache","$event","_ctx","$router","go","_toDisplayString","$route","name","_hoisted_3","_renderSlot","$slots","undefined","__exports__","render","VSelectionControlGroupSymbol","Symbol","for","makeSelectionControlGroupProps","propsFactory","color","String","disabled","type","Boolean","default","defaultsTarget","error","id","inline","falseIcon","IconValue","trueIcon","ripple","Object","multiple","readonly","modelValue","valueComparator","Function","deepEqual","makeComponentProps","makeDensityProps","makeThemeProps","makeVSelectionControlGroupProps","genericComponent","props","emits","value","setup","_ref","slots","useProxiedModel","uid","getUid","computed","updateHandlers","Set","provide","forceUpdate","forEach","fn","onForceUpdate","cb","add","onScopeDispose","delete","provideDefaults","toRef","density","Array","isArray","useRender","_createVNode","makeVSelectionControlProps","label","baseColor","trueValue","falseValue","useSelectionControl","group","inject","densityClasses","useDensity","isMultiple","model","get","val","wrapInArray","some","v","set","currentValue","newVal","filter","item","textColorClasses","textColorStyles","useTextColor","backgroundColorClasses","backgroundColorStyles","useBackgroundColor","icon","VSelectionControl","directives","Ripple","inheritAttrs","attrs","isFocused","shallowRef","isFocusVisible","input","ref","isInteractive","onFocus","e","matchesSelector","target","onBlur","onClickLabel","stopPropagation","onInput","nextTick","checked","rootAttrs","inputAttrs","filterInputAttrs","inputNode","_mergeProps","_withDirectives","_Fragment","VIcon","_resolveDirective","VLabel","makeVSwitchProps","indeterminate","inset","flat","loading","makeVInputProps","VSwitch","focused","loaderClasses","useLoader","focus","blur","useFocus","control","isForcedColorsModeActive","IN_BROWSER","window","matchMedia","matches","loaderColor","onChange","onTrackClick","preventDefault","click","controlAttrs","inputProps","VInput","filterProps","controlProps","_ref2","messagesId","isDisabled","isReadonly","isValid","slotProps","_ref3","_ref4","thumb","VDefaultsProvider","size","VScaleTransition","LoaderSlot","loader","VProgressCircular","isActive","_component_header2","_hoisted_2","_renderList","$data","listNotifications","notification","key","_hoisted_4","_component_v_spacer","_component_v_switch","active","components","Header2","data","VSpacer","createSimpleFunctional"],"sourceRoot":""}